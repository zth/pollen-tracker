/** This file is autogenerated by ReasonRelay and should not be modified manually. */
/**
 * ENUMS
 * Helpers for wrapping/unwrapping enums.
 */
module Enum_CacheControlScope: {
  type t = [ | `PUBLIC | `PRIVATE | `FUTURE_ADDED_VALUE__];
  type wrapped;
  let unwrap: wrapped => t;
  let wrap: t => wrapped;
  let toString: t => string;
  let fromString: string => t;
} = {
  type t = [ | `PUBLIC | `PRIVATE | `FUTURE_ADDED_VALUE__];
  type wrapped;

  external __unwrap: wrapped => string = "%identity";
  external __wrap: string => wrapped = "%identity";

  let unwrap = wrapped =>
    switch (wrapped |> __unwrap) {
    | "PUBLIC" => `PUBLIC
    | "PRIVATE" => `PRIVATE
    | _ => `FUTURE_ADDED_VALUE__
    };

  let wrap = t =>
    (
      switch (t) {
      | `PUBLIC => "PUBLIC"
      | `PRIVATE => "PRIVATE"
      | `FUTURE_ADDED_VALUE__ => ""
      }
    )
    |> __wrap;

  let toString = t => t |> wrap |> __unwrap;
  let fromString = str => str |> __wrap |> unwrap;
};
